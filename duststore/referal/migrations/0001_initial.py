# Generated by Django 4.2.2 on 2023-07-18 14:56

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receipt_owner_name', models.CharField(max_length=20)),
                ('receipt_owner_phone', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(message='Please Enter A Valid Egyptian Phone Number', regex='^01[0|1|2|5]{1}[0-9]{8}$')])),
                ('receipt_owner_referalcode', models.CharField(blank=True, max_length=7, null=True)),
                ('receit_description', models.CharField(max_length=2000)),
                ('receipt_price', models.IntegerField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='ReferCustomer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referCustomer_name', models.CharField(max_length=20)),
                ('referCustomer_phone', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(message='Please Enter A Valid Egyptian Phone Number', regex='^01[0|1|2|5]{1}[0-9]{8}$')])),
                ('referCustomer_receipt', models.IntegerField(validators=[django.core.validators.MinValueValidator(1500)])),
                ('referCustomer_code', models.TextField(blank=True, max_length=7, unique=True)),
                ('ReferCustomer_deals_totalpricefirst15days', models.IntegerField(default=0)),
                ('ReferCustomer_deals_totalpricelast15days', models.IntegerField(default=0)),
                ('referCustomer_revenue', models.IntegerField(choices=[(10, 'Ten'), (5, 'Five')], default=10)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=20)),
                ('product_code', models.CharField(max_length=10)),
                ('product_description', models.CharField(max_length=2000)),
                ('product_price', models.IntegerField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('product_receit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='referal.receipt')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('customer_phone', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(message='Please Enter A Valid Egyptian Phone Number', regex='^01[0|1|2|5]{1}[0-9]{8}$')])),
                ('customer_image', models.ImageField(blank=True, null=True, upload_to='media/users_images')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, related_name='customer_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='customer_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
